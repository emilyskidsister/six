.PHONY: clean all

all: ../src/corefont.rs

tmp/Bravura.json: Bravura.svg Makefile
	@mkdir -p tmp
	xq -a '{unitsPerEm: .svg.defs.font["font-face"]["@units-per-em"] | tonumber, glyphs: [.svg.defs.font.glyph[] | {key: .["@unicode"], value: {adv: (.["@horiz-adv-x"] // 0) | tonumber, d: .["@d"]}} | select((.key | type) == "string")] | from_entries}' ./Bravura.svg | sed -e 's/\\\u\([a-zA-Z0-9]*\)/U+\U\1/g' > tmp/Bravura.json

tmp/corefont.json: tmp/Bravura.json core.json glyphnames.json bravura_metadata.json Makefile
	@mkdir -p tmp
	jq -s '.[0] as $$font | .[1] as $$core | .[2] as $$glyphnames | .[3] as $$fontmeta | {unitsPerEm: $$font.unitsPerEm, engravingDefaults: $$fontmeta.engravingDefaults, glyphs: [$$core[] | [{name: .}, $$font.glyphs[$$glyphnames[.].codepoint], ($$fontmeta.glyphBBoxes[.] | [to_entries[] | {key: .key, value: [(.value[0] * $$font.unitsPerEm / 4 | round), (.value[1] * $$font.unitsPerEm / 4 | round)]}] | from_entries), ($$fontmeta.glyphsWithAnchors[.] // {} | [to_entries[] | {key: .key, value: [(.value[0] * $$font.unitsPerEm / 4 | round), (.value[1] * $$font.unitsPerEm / 4 | round)]} ] | from_entries )] | add]}' ./tmp/Bravura.json ./core.json ./glyphnames.json ./bravura_metadata.json > ./tmp/corefont.json

../src/corefont.rs: tmp/corefont.json Makefile
	echo "// Generated by gen_corefont/Makefile. Do not edit." > ../src/corefont.rs
	jq -r '.engravingDefaults | to_entries[] | "pub(crate) static " + (.key | gsub("(?<a>[A-Z])"; "_" + .a) | ascii_upcase) + ": f64 = " + (.value|tostring) + ";"' ./tmp/corefont.json >> ../src/corefont.rs
	cat ./tmp/corefont.json | jq -r '"pub(crate) static UNITS_PER_EM: usize = " + (.unitsPerEm|tostring) + ";"' >> ../src/corefont.rs
	cat ./tmp/corefont.json | jq -r '.glyphs[] | "pub(crate) static " + (.name | gsub("(?<a>[A-Z])"; "_" + .a) | ascii_upcase) + ": (i32, [i32; 4], &str) = (" + (.adv|tostring) + ", [" + (.bBoxSW[0]|tostring) + "," + (.bBoxSW[1]|tostring) + "," + (.bBoxNE[0]|tostring) + "," + (.bBoxNE[1]|tostring) + "], \"" + .d + "\");"' >> ../src/corefont.rs

clean:
	rm -fr tmp
